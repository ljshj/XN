package com.bgood.xn.ui;import android.app.TabActivity;import android.content.Intent;import android.os.Bundle;import android.view.KeyEvent;import android.widget.RadioGroup;import android.widget.RadioGroup.OnCheckedChangeListener;import android.widget.TabHost;import android.widget.Toast;import com.alibaba.fastjson.JSON;import com.bgood.xn.R;import com.bgood.xn.bean.ApkBean;import com.bgood.xn.network.BaseNetWork;import com.bgood.xn.network.BaseNetWork.ReturnCode;import com.bgood.xn.network.http.HttpRequestAsyncTask.TaskListenerWithState;import com.bgood.xn.network.http.HttpRequestInfo;import com.bgood.xn.network.http.HttpResponseInfo;import com.bgood.xn.network.http.HttpResponseInfo.HttpTaskState;import com.bgood.xn.system.BGApp;import com.bgood.xn.ui.home.HomeActivity;import com.bgood.xn.ui.message.MessageActivity;import com.bgood.xn.ui.user.UserCenterActivity;import com.bgood.xn.ui.weiqiang.WeiqiangActivity;import com.bgood.xn.ui.xuanneng.XuannengActivity;import com.bgood.xn.utils.LogUtils;import com.bgood.xn.utils.update.UpdateManager;/** *  * @todo:主界面 * @date:2014-12-4 下午5:10:25 * @author:hg_liuzl@163.com */@SuppressWarnings("deprecation")public class MainActivity extends TabActivity implements TaskListenerWithState{	private RadioGroup rg;	private TabHost mTabHost;	public static final String SHOW_OF_FIRST_TAG = "home";	public static final String SHOW_OF_SECOND_TAG = "message";	public static final String SHOW_OF_THIRD_TAG = "weiqiang";	public static final String SHOW_OF_FOUR_TAG = "xuanneng";	public static final String SHOW_OF_FIVE_TAG = "usercenter";	public String mCurrentTab = SHOW_OF_FIRST_TAG;	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		setContentView(R.layout.activity_main);		BGApp.getInstance().addActivity(this);		//检查新版本		//UserCenterRequest.getInstance().requestCheckVesion(this, this);		initView();	}			private void initView() {			rg = (RadioGroup) findViewById(R.id.main_tab_group);			mTabHost = getTabHost();			Intent i_home = new Intent(this, HomeActivity.class);			Intent i_message = new Intent(this, MessageActivity.class);			Intent i_weiqiang = new Intent(this, WeiqiangActivity.class);			Intent i_xuanneng = new Intent(this, XuannengActivity.class);			Intent i_user = new Intent(this, UserCenterActivity.class);			mTabHost.addTab(mTabHost.newTabSpec(SHOW_OF_FIRST_TAG).setIndicator(SHOW_OF_FIRST_TAG).setContent(i_home));			mTabHost.addTab(mTabHost.newTabSpec(SHOW_OF_SECOND_TAG).setIndicator(SHOW_OF_SECOND_TAG).setContent(i_message));			mTabHost.addTab(mTabHost.newTabSpec(SHOW_OF_THIRD_TAG).setIndicator(SHOW_OF_THIRD_TAG).setContent(i_weiqiang));			mTabHost.addTab(mTabHost.newTabSpec(SHOW_OF_FOUR_TAG).setIndicator(SHOW_OF_FOUR_TAG).setContent(i_xuanneng));			mTabHost.addTab(mTabHost.newTabSpec(SHOW_OF_FIVE_TAG).setIndicator(SHOW_OF_FIVE_TAG).setContent(i_user));			mTabHost.setCurrentTabByTag(SHOW_OF_FIRST_TAG);			rg.setOnCheckedChangeListener(new OnCheckedChangeListener() {						public void onCheckedChanged(RadioGroup group, int checkedId) {							switch (checkedId) {							case R.id.main_tab_home:								mCurrentTab = SHOW_OF_FIRST_TAG;								break;							case R.id.main_tab_communication:								mCurrentTab = SHOW_OF_SECOND_TAG;								break;							case R.id.main_tab_weiqiang:								mCurrentTab = SHOW_OF_THIRD_TAG;								break;							case R.id.main_tab_xuanneng:								mCurrentTab = SHOW_OF_FOUR_TAG;								break;							case R.id.main_tab_me:								mCurrentTab = SHOW_OF_FIVE_TAG;								break;							default:								mCurrentTab = SHOW_OF_FIRST_TAG;								break;							}							mTabHost.setCurrentTabByTag(mCurrentTab);						}					});			}		private long exitTime = 0;// 监听用户按返回键        @Override    public boolean dispatchKeyEvent(KeyEvent event) {    	if(event.getAction() == KeyEvent.ACTION_DOWN && event.getKeyCode() == KeyEvent.KEYCODE_BACK){    		if ((System.currentTimeMillis() - exitTime) > 2000) {				Toast.makeText(MainActivity.this, "再按一次退出程序",Toast.LENGTH_SHORT).show();				exitTime = System.currentTimeMillis();				return true;			} else {				BGApp.finishAllActivity();				finish();			}    		return false;    	}    	return super.dispatchKeyEvent(event);    }        @Override    protected void onDestroy() {    	super.onDestroy();    	    	LogUtils.i("----------MainActivity---------------finish-");    	    }        @Override	public void onTaskOver(HttpRequestInfo request, HttpResponseInfo info) {		if(info.getState() == HttpTaskState.STATE_OK){			BaseNetWork bNetWork = info.getmBaseNetWork();			String strJson = bNetWork.getStrJson();			if(bNetWork.getReturnCode() == ReturnCode.RETURNCODE_OK){				/**版本升级处理*/				final ApkBean apk = JSON.parseObject(strJson, ApkBean.class);				UpdateManager manager = new UpdateManager(MainActivity.this, apk);				manager.checkUpdateInfo();			}		}	}}