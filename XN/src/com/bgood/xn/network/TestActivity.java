package com.bgood.xn.network;import org.json.JSONException;import org.json.JSONObject;import android.annotation.SuppressLint;import android.app.Activity;import android.os.Bundle;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.AdapterView;import android.widget.AdapterView.OnItemClickListener;import android.widget.BaseAdapter;import android.widget.Button;import android.widget.GridView;import android.widget.Toast;import com.alibaba.fastjson.JSON;import com.bgood.xn.R;import com.bgood.xn.bean.MemberLoginBean;import com.bgood.xn.network.http.HttpRequestInfo;import com.bgood.xn.network.http.HttpResponseInfo;import com.bgood.xn.network.http.HttpRequestAsyncTask.TaskListenerWithState;import com.bgood.xn.network.request.UserCenterRequest;import com.bgood.xn.system.SystemConfig;import com.bgood.xn.view.BToast;/** * @todo:TODO * @author:hg_liuzl@163.com */public class TestActivity extends Activity implements TaskListenerWithState,OnItemClickListener {	private String[] mButtons;	private GridView mAllButton;	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		setContentView(R.layout.test_interface);		mAllButton = (GridView)findViewById(R.id.gv_btn);		mButtons = new String[]{			"1.	用户登录",			"2.	用户基本信息",		};		mAllButton.setAdapter(new TestAdapter());		mAllButton.setOnItemClickListener(this);	}		@Override	public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {		switch(arg2){			case 0 :  				UserCenterRequest.getInstance().requestLogin(this, this, "13691680839","112233");				break;			case 1:   				UserCenterRequest.getInstance().requestPersonInfo(this, this, "13691680839");				break;				default:				break;			}		}		@Override	public void onTaskOver(HttpRequestInfo request, HttpResponseInfo info) {		switch (info.getState()) {		case STATE_ERROR_SERVER:			Toast.makeText(TestActivity.this, "服务器地址错误", Toast.LENGTH_SHORT).show();			break;		case STATE_NO_NETWORK_CONNECT:			Toast.makeText(TestActivity.this, "没有网络，请检查您的网络连接", Toast.LENGTH_SHORT).show();			break;		case STATE_TIME_OUT:			Toast.makeText(TestActivity.this, "连接超时", Toast.LENGTH_SHORT).show();			break;		case STATE_UNKNOWN:			Toast.makeText(TestActivity.this, "未知错误", Toast.LENGTH_SHORT).show();			break;		case STATE_OK:			BaseNetWork bNetWork = info.getmBaseNetWork();			JSONObject body = bNetWork.getBody();			String strJson = bNetWork.getStrJson();			try {			switch (bNetWork.getMessageType()) {			case 810001:					String verfy = body.getString("verfy");					Toast.makeText(TestActivity.this, "verfy我有验证码了"+verfy, Toast.LENGTH_LONG).show();								break;			case 810005:				MemberLoginBean login = JSON.parseObject(strJson, MemberLoginBean.class);				StringBuilder sb = new StringBuilder();				sb.append("SessionID").append(login.userid).append("\n");				sb.append("Success").append(login.success).append("\n");				sb.append("token").append(login.token).append("\n");				sb.append("BServer").append(login.bserver).append("\n");				sb.append("FServer").append(login.fserver).append("\n");				SystemConfig.FILE_SERVER = login.fserver;				SystemConfig.BS_SERVER = login.bserver;				SystemConfig.SessionID = login.userid;				BToast.show(TestActivity.this, "消息："+sb.toString());				break;			case 820001:				break;			default:				break;			}			} catch (JSONException e) {				e.printStackTrace();			}						break;		default:			break;			}		}			private class TestAdapter extends BaseAdapter{		@Override		public int getCount() {			return mButtons.length;		}		@Override		public Object getItem(int position) {			return mButtons[position];		}		@Override		public long getItemId(int position) {			return position;		}		@SuppressLint("NewApi")		@Override		public View getView(int position, View convertView, ViewGroup parent) {			Button view = (Button)LayoutInflater.from(TestActivity.this).inflate(R.layout.test_interface_item, null);			view.setText(mButtons[position]);			return view;		}	}}